{"version":3,"sources":["utils/class-names/index.js","utils/duration/index.js","pomodoro/timerDuration.js","pomodoro/PlayStopButtons.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["classNames","classNameToBoolean","Object","entries","reduce","classes","className","value","concat","undefined","filter","join","minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","BreakDuration","props","breakDurationMins","increaseBreakTime","decreaseBreakTime","data-testid","onClick","type","FocusDuration","focusDurationMins","increaseFocusTime","decreaseFocusTime","PlayStop","playPause","isTimerRunning","stopButton","role","aria-label","title","oi","Pomodoro","useState","setIsTimerRunning","initialPlay","setInitialPlay","onBreak","setOnBreak","activeSession","setActiveSession","setfocusDurationMins","setbreakDurationMins","durationMins","setDurationMins","durationSecs","setDurationSecs","initialDuration","setInitialDuration","initialBreakDuration","setInitialBreakDuration","timerProgress","setTimerProgress","percentage","currentMinutes","currentSeconds","initialMinutes","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","second","currentProgress","Audio","play","state","progress","seconds","duration","prevState","style","display","givenSeconds","round","secondsToDuration","height","aria-valuemin","aria-valuemax","aria-valuenow","width","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2760ad75.chunk.js","sourcesContent":["/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\nexport function BreakDuration(props) {\r\n  const {\r\n    breakDurationMins,\r\n    increaseBreakTime,\r\n    decreaseBreakTime,\r\n  } = props;\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"float-right\">\r\n        <div className=\"input-group input-group-lg mb-2\">\r\n          <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n            {/* TODO: Update this text to display the current break session duration */}\r\n            Break Duration: {minutesToDuration(breakDurationMins)}\r\n          </span>\r\n          <div className=\"input-group-append\">\r\n            {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\r\n            <button\r\n              onClick={decreaseBreakTime}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"decrease-break\"\r\n            >\r\n              <span className=\"oi oi-minus\" />\r\n            </button>\r\n            {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\r\n            <button\r\n              onClick={increaseBreakTime}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"increase-break\"\r\n            >\r\n              <span className=\"oi oi-plus\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FocusDuration(props) {\r\n  const {\r\n    focusDurationMins,\r\n    increaseFocusTime,\r\n    decreaseFocusTime,\r\n  } = props;\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"input-group input-group-lg mb-2\">\r\n        <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n          {/* TODO: Update this text to display the current focus session duration */}\r\n          Focus Duration: {minutesToDuration(focusDurationMins)}\r\n        </span>\r\n        <div className=\"input-group-append\">\r\n          {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n          <button\r\n            onClick={decreaseFocusTime}\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"decrease-focus\"\r\n          >\r\n            <span className=\"oi oi-minus\" />\r\n          </button>\r\n          {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n          <button\r\n            onClick={increaseFocusTime}\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"increase-focus\"\r\n          >\r\n            <span className=\"oi oi-plus\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PlayStop(props) {\r\n  const { playPause, classNames, isTimerRunning, stopButton } = props;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div\r\n          className=\"btn-group btn-group-lg mb-2\"\r\n          role=\"group\"\r\n          aria-label=\"Timer controls\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-testid=\"play-pause\"\r\n            title=\"Start or pause timer\"\r\n            onClick={playPause}\r\n          >\r\n            <span\r\n              className={classNames({\r\n                oi: true,\r\n                \"oi-media-play\": !isTimerRunning,\r\n                \"oi-media-pause\": isTimerRunning,\r\n              })}\r\n            />\r\n          </button>\r\n          {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\r\n          <button\r\n            onClick={stopButton}\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            title=\"Stop the session\"\r\n          >\r\n            <span className=\"oi oi-media-stop\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nimport { BreakDuration, FocusDuration } from \"./timerDuration\";\nimport PlayStopButtons from \"./PlayStopButtons\";\n\nfunction Pomodoro() {\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // Timer starts out paused\n  const [initialPlay, setInitialPlay] = useState(true); //sets each session's inital start\n  const [onBreak, setOnBreak] = useState(false); // starts break when true\n  const [activeSession, setActiveSession] = useState(false); // starts a session\n\n  const [focusDurationMins, setfocusDurationMins] = useState(25);\n  const [breakDurationMins, setbreakDurationMins] = useState(5);\n  const [durationMins, setDurationMins] = useState(25);\n  const [durationSecs, setDurationSecs] = useState(0);\n  const [initialDuration, setInitialDuration] = useState(25);\n  const [initialBreakDuration, setInitialBreakDuration] = useState(5);\n\n  const [timerProgress, setTimerProgress] = useState(0);\n\n  const decreaseFocusTime = () => {\n    if (focusDurationMins > 5 && !isTimerRunning && initialPlay)\n      setfocusDurationMins((minutes) => (minutes -= 5));\n  };\n\n  const increaseFocusTime = () => {\n    if (focusDurationMins < 60 && !isTimerRunning && initialPlay)\n      setfocusDurationMins((minutes) => (minutes += 5));\n  };\n\n  const decreaseBreakTime = () => {\n    if (breakDurationMins > 1 && !isTimerRunning && initialPlay)\n      setbreakDurationMins((minutes) => (minutes -= 1));\n  };\n\n  const increaseBreakTime = () => {\n    if (breakDurationMins < 15 && !isTimerRunning && initialPlay)\n      setbreakDurationMins((minutes) => (minutes += 1));\n  };\n\n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return (\n      100 -\n      ((currentMinutes * 60 + currentSeconds) / (initialMinutes * 60)) * 100\n    );\n  }\n\n  function timerExpired() {\n    if (!onBreak) {\n      new Audio(`https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-27787/zapsplat_bell_medium_large_soft_hit_chime_001_29436.mp3?_=1`).play();\n      setOnBreak((state) => (state = true));\n      setTimerProgress((progress) => (progress = 0));\n      setDurationSecs((seconds) => (seconds = 0));\n      setDurationMins((minutes) => (minutes = initialBreakDuration));\n    } else {\n      new Audio(`https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-two/household_alarm_clock_beep_tone.mp3?_=1`).play();\n      setOnBreak((state) => (state = false));\n      setTimerProgress((progress) => (progress = 0));\n      setDurationSecs((seconds) => (seconds = 0));\n      setDurationMins((minutes) => (minutes = initialDuration));\n    }\n  }\n\n  useInterval(\n    () => {\n      //While timer runs\n      setDurationSecs((second) => {\n        second === 0 ? (second = 59) : (second -= 1); //seconds count down, cycles over minute\n        if (second === 59)\n          setDurationMins((minutes) => (minutes = durationMins - 1));\n        return second;\n      });\n\n      if (onBreak) {\n        setTimerProgress(\n          (currentProgress) =>\n            (currentProgress = percentage(\n              durationMins,\n              durationSecs,\n              initialBreakDuration\n            ))\n        );\n      } else {\n        setTimerProgress(\n          (currentProgress) =>\n            (currentProgress = percentage(\n              durationMins,\n              durationSecs,\n              initialDuration\n            ))\n        );\n      }\n\n      if (durationMins === 0 && durationSecs === 1) {\n        timerExpired();\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    if (initialPlay) {\n      setInitialDuration((duration) => (duration = focusDurationMins));\n      setInitialBreakDuration((duration) => (duration = breakDurationMins));\n      setDurationMins((duration) => (duration = focusDurationMins));\n      setInitialPlay((state) => (state = false));\n    }\n    setActiveSession((state) => (state = true));\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stopButton() {\n    setInitialPlay((state) => (state = true));\n    setIsTimerRunning((state) => (state = false));\n    setOnBreak((state) => (state = false));\n    setActiveSession((state) => (state = false));\n\n    setTimerProgress((progress) => (progress = 0));\n    setDurationSecs((seconds) => (seconds = 0));\n    setDurationMins((duration) => (duration = focusDurationMins));\n    setInitialDuration((duration) => (duration = focusDurationMins));\n    setInitialBreakDuration((duration) => (duration = breakDurationMins));\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusDuration\n          focusDurationMins={focusDurationMins}\n          decreaseFocusTime={decreaseFocusTime}\n          increaseFocusTime={increaseFocusTime}\n        />\n        <BreakDuration\n          breakDurationMins={breakDurationMins}\n          decreaseBreakTime={decreaseBreakTime}\n          increaseBreakTime={increaseBreakTime}\n        />\n      </div>\n      <PlayStopButtons\n        playPause={playPause}\n        classNames={classNames}\n        isTimerRunning={isTimerRunning}\n        stopButton={stopButton}\n      />\n      <div style={activeSession ? { display: \"block\" } : { display: \"none\" }}>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {!onBreak ? \"Focusing\" : \"On Break\"} for{\" \"}\n              {!onBreak\n                ? minutesToDuration(initialDuration)\n                : minutesToDuration(initialBreakDuration)}{\" \"}\n              minutes\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(durationMins * 60 + durationSecs)} remaining\n            </p>\n            {!isTimerRunning ? <h2>PAUSED</h2> : null}\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={timerProgress}\n                style={{ width: `${timerProgress}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
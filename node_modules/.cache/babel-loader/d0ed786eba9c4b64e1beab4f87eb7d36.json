{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjona\\\\Thinkful\\\\react\\\\project-pomodoro-timer\\\\pomodoro-timer\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nimport { BreakDuration, FocusDuration } from \"./timerDuration\";\nimport PlayStopButtons from \"./PlayStopButtons\";\n\nfunction Pomodoro() {\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // Timer starts out paused\n\n  const [initialPlay, setInitialPlay] = useState(true); //sets each session's inital start\n\n  const [onBreak, setOnBreak] = useState(false); // starts break when true\n\n  const [activeSession, setActiveSession] = useState(false); // starts a session\n\n  const [focusDurationMins, setfocusDurationMins] = useState(25);\n  const [breakDurationMins, setbreakDurationMins] = useState(5);\n  const [durationMins, setDurationMins] = useState(25);\n  const [durationSecs, setDurationSecs] = useState(0);\n  const [initialDuration, setInitialDuration] = useState(25);\n  const [initialBreakDuration, setInitialBreakDuration] = useState(5);\n  const [timerProgress, setTimerProgress] = useState(0);\n\n  const decreaseFocusTime = () => {\n    if (focusDurationMins > 5 && !isTimerRunning && initialPlay) setfocusDurationMins(minutes => minutes -= 5);\n  };\n\n  const increaseFocusTime = () => {\n    if (focusDurationMins < 60 && !isTimerRunning && initialPlay) setfocusDurationMins(minutes => minutes += 5);\n  };\n\n  const decreaseBreakTime = () => {\n    if (breakDurationMins > 1 && !isTimerRunning && initialPlay) setbreakDurationMins(minutes => minutes -= 1);\n  };\n\n  const increaseBreakTime = () => {\n    if (breakDurationMins < 15 && !isTimerRunning && initialPlay) setbreakDurationMins(minutes => minutes += 1);\n  };\n\n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return 100 - (currentMinutes * 60 + currentSeconds) / (initialMinutes * 60) * 100;\n  }\n\n  function timerExpired() {\n    if (!onBreak) {\n      //will change\n      new Audio(`https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-27787/zapsplat_bell_medium_large_soft_hit_chime_001_29436.mp3?_=1`).play();\n      setOnBreak(state => state = true);\n      setTimerProgress(progress => progress = 0);\n      setDurationSecs(seconds => seconds = 0);\n      setDurationMins(minutes => minutes = initialBreakDuration);\n    } else {\n      new Audio(`https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-two/household_alarm_clock_beep_tone.mp3?_=1`).play();\n      setOnBreak(state => state = false);\n      setTimerProgress(progress => progress = 0);\n      setDurationSecs(seconds => seconds = 0);\n      setDurationMins(minutes => minutes = initialDuration);\n    }\n  }\n\n  useInterval(() => {\n    //While timer runs\n    setDurationSecs(second => {\n      second === 0 ? second = 59 : second -= 1; //seconds count down, cycles over minute\n\n      if (second === 59) setDurationMins(minutes => minutes = durationMins - 1);\n      return second;\n    });\n\n    if (onBreak) {\n      setTimerProgress(currentProgress => currentProgress = percentage(durationMins, durationSecs, initialBreakDuration));\n    } else {\n      setTimerProgress(currentProgress => currentProgress = percentage(durationMins, durationSecs, initialDuration));\n    }\n\n    if (durationMins === 0 && durationSecs === 1) {\n      timerExpired();\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    if (initialPlay) {\n      setInitialDuration(duration => duration = focusDurationMins);\n      setInitialBreakDuration(duration => duration = breakDurationMins);\n      setDurationMins(duration => duration = focusDurationMins);\n      setInitialPlay(state => state = false);\n    }\n\n    setActiveSession(state => state = true);\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stopButton() {\n    setInitialPlay(state => state = true);\n    setIsTimerRunning(state => state = false);\n    setOnBreak(state => state = false);\n    setActiveSession(state => state = false);\n    setTimerProgress(progress => progress = 0);\n    setDurationSecs(seconds => seconds = 0);\n    setDurationMins(duration => duration = focusDurationMins);\n    setInitialDuration(duration => duration = focusDurationMins);\n    setInitialBreakDuration(duration => duration = breakDurationMins);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusDuration, {\n    focusDurationMins: focusDurationMins,\n    decreaseFocusTime: decreaseFocusTime,\n    increaseFocusTime: increaseFocusTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakDuration, {\n    breakDurationMins: breakDurationMins,\n    decreaseBreakTime: decreaseBreakTime,\n    increaseBreakTime: increaseBreakTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayStopButtons, {\n    playPause: playPause,\n    classNames: classNames,\n    isTimerRunning: isTimerRunning,\n    stopButton: stopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: activeSession ? {\n      display: \"block\"\n    } : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, !onBreak ? \"Focusing\" : \"On Break\", \" for\", \" \", !onBreak ? minutesToDuration(initialDuration) : minutesToDuration(initialBreakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, secondsToDuration(durationMins * 60 + durationSecs), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 32\n    }\n  }, \"PAUSED\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": timerProgress,\n    style: {\n      width: `${timerProgress}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/jjona/Thinkful/react/project-pomodoro-timer/pomodoro-timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","BreakDuration","FocusDuration","PlayStopButtons","Pomodoro","isTimerRunning","setIsTimerRunning","initialPlay","setInitialPlay","onBreak","setOnBreak","activeSession","setActiveSession","focusDurationMins","setfocusDurationMins","breakDurationMins","setbreakDurationMins","durationMins","setDurationMins","durationSecs","setDurationSecs","initialDuration","setInitialDuration","initialBreakDuration","setInitialBreakDuration","timerProgress","setTimerProgress","decreaseFocusTime","minutes","increaseFocusTime","decreaseBreakTime","increaseBreakTime","percentage","currentMinutes","currentSeconds","initialMinutes","timerExpired","Audio","play","state","progress","seconds","second","currentProgress","playPause","duration","prevState","stopButton","display","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nimport { BreakDuration, FocusDuration } from \"./timerDuration\";\nimport PlayStopButtons from \"./PlayStopButtons\";\n\nfunction Pomodoro() {\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // Timer starts out paused\n  const [initialPlay, setInitialPlay] = useState(true); //sets each session's inital start\n  const [onBreak, setOnBreak] = useState(false); // starts break when true\n  const [activeSession, setActiveSession] = useState(false); // starts a session\n\n  const [focusDurationMins, setfocusDurationMins] = useState(25);\n  const [breakDurationMins, setbreakDurationMins] = useState(5);\n  const [durationMins, setDurationMins] = useState(25);\n  const [durationSecs, setDurationSecs] = useState(0);\n  const [initialDuration, setInitialDuration] = useState(25);\n  const [initialBreakDuration, setInitialBreakDuration] = useState(5);\n\n  const [timerProgress, setTimerProgress] = useState(0);\n\n  const decreaseFocusTime = () => {\n    if (focusDurationMins > 5 && !isTimerRunning && initialPlay)\n      setfocusDurationMins((minutes) => (minutes -= 5));\n  };\n\n  const increaseFocusTime = () => {\n    if (focusDurationMins < 60 && !isTimerRunning && initialPlay)\n      setfocusDurationMins((minutes) => (minutes += 5));\n  };\n\n  const decreaseBreakTime = () => {\n    if (breakDurationMins > 1 && !isTimerRunning && initialPlay)\n      setbreakDurationMins((minutes) => (minutes -= 1));\n  };\n\n  const increaseBreakTime = () => {\n    if (breakDurationMins < 15 && !isTimerRunning && initialPlay)\n      setbreakDurationMins((minutes) => (minutes += 1));\n  };\n\n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return (\n      100 -\n      ((currentMinutes * 60 + currentSeconds) / (initialMinutes * 60)) * 100\n    );\n  }\n\n  function timerExpired() {\n    if (!onBreak) {\n      //will change\n      new Audio(`https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-27787/zapsplat_bell_medium_large_soft_hit_chime_001_29436.mp3?_=1`).play();\n      setOnBreak((state) => (state = true));\n      setTimerProgress((progress) => (progress = 0));\n      setDurationSecs((seconds) => (seconds = 0));\n      setDurationMins((minutes) => (minutes = initialBreakDuration));\n    } else {\n      new Audio(`https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-two/household_alarm_clock_beep_tone.mp3?_=1`).play();\n      setOnBreak((state) => (state = false));\n      setTimerProgress((progress) => (progress = 0));\n      setDurationSecs((seconds) => (seconds = 0));\n      setDurationMins((minutes) => (minutes = initialDuration));\n    }\n  }\n\n  useInterval(\n    () => {\n      //While timer runs\n      setDurationSecs((second) => {\n        second === 0 ? (second = 59) : (second -= 1); //seconds count down, cycles over minute\n        if (second === 59)\n          setDurationMins((minutes) => (minutes = durationMins - 1));\n        return second;\n      });\n\n      if (onBreak) {\n        setTimerProgress(\n          (currentProgress) =>\n            (currentProgress = percentage(\n              durationMins,\n              durationSecs,\n              initialBreakDuration\n            ))\n        );\n      } else {\n        setTimerProgress(\n          (currentProgress) =>\n            (currentProgress = percentage(\n              durationMins,\n              durationSecs,\n              initialDuration\n            ))\n        );\n      }\n\n      if (durationMins === 0 && durationSecs === 1) {\n        timerExpired();\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    if (initialPlay) {\n      setInitialDuration((duration) => (duration = focusDurationMins));\n      setInitialBreakDuration((duration) => (duration = breakDurationMins));\n      setDurationMins((duration) => (duration = focusDurationMins));\n      setInitialPlay((state) => (state = false));\n    }\n    setActiveSession((state) => (state = true));\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stopButton() {\n    setInitialPlay((state) => (state = true));\n    setIsTimerRunning((state) => (state = false));\n    setOnBreak((state) => (state = false));\n    setActiveSession((state) => (state = false));\n\n    setTimerProgress((progress) => (progress = 0));\n    setDurationSecs((seconds) => (seconds = 0));\n    setDurationMins((duration) => (duration = focusDurationMins));\n    setInitialDuration((duration) => (duration = focusDurationMins));\n    setInitialBreakDuration((duration) => (duration = breakDurationMins));\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusDuration\n          focusDurationMins={focusDurationMins}\n          decreaseFocusTime={decreaseFocusTime}\n          increaseFocusTime={increaseFocusTime}\n        />\n        <BreakDuration\n          breakDurationMins={breakDurationMins}\n          decreaseBreakTime={decreaseBreakTime}\n          increaseBreakTime={increaseBreakTime}\n        />\n      </div>\n      <PlayStopButtons\n        playPause={playPause}\n        classNames={classNames}\n        isTimerRunning={isTimerRunning}\n        stopButton={stopButton}\n      />\n      <div style={activeSession ? { display: \"block\" } : { display: \"none\" }}>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {!onBreak ? \"Focusing\" : \"On Break\"} for{\" \"}\n              {!onBreak\n                ? minutesToDuration(initialDuration)\n                : minutesToDuration(initialBreakDuration)}{\" \"}\n              minutes\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(durationMins * 60 + durationSecs)} remaining\n            </p>\n            {!isTimerRunning ? <h2>PAUSED</h2> : null}\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={timerProgress}\n                style={{ width: `${timerProgress}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}